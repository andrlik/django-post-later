# Generated by Django 4.1.3 on 2022-12-30 19:31

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import rules.contrib.models


class Migration(migrations.Migration):

    dependencies = [
        ("post_later", "0019_mediaattachment_num_failures"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="mediaattachment",
            name="user",
        ),
        migrations.RemoveField(
            model_name="scheduledpost",
            name="user",
        ),
        migrations.RemoveField(
            model_name="scheduledthread",
            name="user",
        ),
        migrations.AlterField(
            model_name="mediaattachment",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="scheduledpost",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="scheduledthread",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.CreateModel(
            name="ScheduledBoost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "boost_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("error", "Error, awaiting retry"),
                            ("failed", "Failed to boost, giving up."),
                            ("complete", "Boosted successfully"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=15,
                    ),
                ),
                (
                    "remote_url",
                    models.URLField(help_text="URL of the post to be boosted."),
                ),
                (
                    "remote_id",
                    models.CharField(
                        blank=True,
                        help_text="Derived remote id of the post.",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "send_at",
                    models.DateTimeField(
                        db_index=True, help_text="When is this boost scheduled for?"
                    ),
                ),
                (
                    "last_attempt_at",
                    models.DateTimeField(
                        blank=True, help_text="Last failed attempt to send.", null=True
                    ),
                ),
                (
                    "num_failures",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of failures this boost has encountered.",
                    ),
                ),
                (
                    "next_retry",
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        help_text="Next time to retry boost.",
                        null=True,
                    ),
                ),
                (
                    "finished_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When did we succeed in the boost?",
                        null=True,
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        help_text="Social account this is linked to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="post_later.account",
                    ),
                ),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
    ]
